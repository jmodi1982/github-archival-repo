# This is a basic workflow to help you get started with Actions

name: Archive-GitHub-Repo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs: 
      GitHub_Owner:
        type: string
        required: true
        default: 'octocat'
      GitHub_Repo:
        type: string
        required: true
        default: 'Hello-World'

# env:
#   GitHub_Owner: 'octocat'
#   GitHub_Repo: 'Hello-World'

run-name: Archive ${{ inputs.GitHub_Owner }} by @${{ GitHub_Repo }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Archive-Repo :
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Create Directory ${{ github.event.inputs.GitHub_Owner }}_${{github.event.inputs.GitHub_Repo}}
        id: archive_folder_id
        run: |
          foldername=${{ github.event.inputs.GitHub_Owner }}_${{github.event.inputs.GitHub_Repo}}_$(date +"%F-%H-%M-%S")
          echo "archive_folder_name=$foldername" >> $GITHUB_ENV
          mkdir $foldername

      - name: Create Directory Code and Metadata
        run: |
          cd ${{ env.archive_folder_name }}
          mkdir Code
          mkdir Metadata

      - name: Take Repo backup
        run: |
          cd ${{ env.archive_folder_name }}/Code
          git clone https://github.com/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}.git
          ls -ltra
          ls -ltra ${{github.event.inputs.GitHub_Repo}}

      - name: Start Metadata backup
        run: |
          echo "starting metadata backup ..."
          ls -ltra
          ls -ltra ${{ env.archive_folder_name }}
          ls -ltra ${{ env.archive_folder_name }}/Code
          ls -ltra ${{ env.archive_folder_name }}/Metadata

      - name: Call Repo Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}' --header 'Content-Type: application/json' >> Repo.json
                   
      - name: Call Pull Requests Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/pulls?state=all' --header 'Content-Type: application/json' >> PullRequests.json

      - name: Call Pull Requests Comments Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/pulls/comments' --header 'Content-Type: application/json' >> PullRequestsComments.json

      - name: Call Issues Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/issues?state=all' --header 'Content-Type: application/json' >> Issues.json

      - name: Call Issue Events Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/issues/events' --header 'Content-Type: application/json' >> IssuesEvents.json

      - name: Call Issue Comments Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/issues/comments' --header 'Content-Type: application/json' >> IssuesComments.json

      - name: Call Labels Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/labels' --header 'Content-Type: application/json' >> Labels.json

      - name: Call Milestones Api
        run: |
          cd ${{ env.archive_folder_name }}/Metadata
          curl --location --request GET 'https://api.github.com/repos/${{ github.event.inputs.GitHub_Owner }}/${{github.event.inputs.GitHub_Repo}}/milestones?state=all' --header 'Content-Type: application/json' >> Milestones.json

      - name: Package the Archive & Upload to archive.org
        run: |
          pwd
          ls -ltra
          zip -r ${{ env.archive_folder_name }}.zip ${{ env.archive_folder_name }}
          ls -ltra
          curl --location --header 'x-amz-auto-make-bucket:1' \
          --header 'x-archive-meta01-collection:opensource' \
          --header 'x-archive-meta-mediatype:Archives' \
          --header 'x-archive-meta-sponsor:GitHub Archival Utility' \
          --header 'x-archive-meta-language:eng' \
          --header "authorization: LOW WmX5sUovFoNm6XwN:MLP85d78R3bGIsPe" \
          --upload-file ${{ env.archive_folder_name }}.zip \
          http://s3.us.archive.org/github-archives/${{ env.archive_folder_name }}.zip

      - name: Upload the Archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.archive_folder_name }}
          path: ./${{ env.archive_folder_name }}.zip
          if-no-files-found: error
